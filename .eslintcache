[{"F:\\Purwadhika\\JCWM15\\FRONTEND\\Ujian\\ujian-frontend-1504\\src\\index.js":"1","F:\\Purwadhika\\JCWM15\\FRONTEND\\Ujian\\ujian-frontend-1504\\src\\App.js":"2","F:\\Purwadhika\\JCWM15\\FRONTEND\\Ujian\\ujian-frontend-1504\\src\\components\\Navigation.js":"3","F:\\Purwadhika\\JCWM15\\FRONTEND\\Ujian\\ujian-frontend-1504\\src\\assets\\index.js":"4","F:\\Purwadhika\\JCWM15\\FRONTEND\\Ujian\\ujian-frontend-1504\\src\\pages\\home.js":"5","F:\\Purwadhika\\JCWM15\\FRONTEND\\Ujian\\ujian-frontend-1504\\src\\pages\\login.js":"6","F:\\Purwadhika\\JCWM15\\FRONTEND\\Ujian\\ujian-frontend-1504\\src\\actions\\index.js":"7","F:\\Purwadhika\\JCWM15\\FRONTEND\\Ujian\\ujian-frontend-1504\\src\\actions\\userAction.js":"8","F:\\Purwadhika\\JCWM15\\FRONTEND\\Ujian\\ujian-frontend-1504\\src\\components\\products.js":"9","F:\\Purwadhika\\JCWM15\\FRONTEND\\Ujian\\ujian-frontend-1504\\src\\reducer\\index.js":"10","F:\\Purwadhika\\JCWM15\\FRONTEND\\Ujian\\ujian-frontend-1504\\src\\reducer\\userReducer.js":"11","F:\\Purwadhika\\JCWM15\\FRONTEND\\Ujian\\ujian-frontend-1504\\src\\reducer\\historyReducer.js":"12","F:\\Purwadhika\\JCWM15\\FRONTEND\\Ujian\\ujian-frontend-1504\\src\\actions\\historyAction.js":"13","F:\\Purwadhika\\JCWM15\\FRONTEND\\Ujian\\ujian-frontend-1504\\src\\pages\\cartPage.js":"14","F:\\Purwadhika\\JCWM15\\FRONTEND\\Ujian\\ujian-frontend-1504\\src\\pages\\detProduct.js":"15","F:\\Purwadhika\\JCWM15\\FRONTEND\\Ujian\\ujian-frontend-1504\\src\\pages\\error.js":"16"},{"size":615,"mtime":1608106439078,"results":"17","hashOfConfig":"18"},{"size":1594,"mtime":1608107967036,"results":"19","hashOfConfig":"18"},{"size":2505,"mtime":1608106443779,"results":"20","hashOfConfig":"18"},{"size":49,"mtime":1608086937889,"results":"21","hashOfConfig":"18"},{"size":296,"mtime":1608091300820,"results":"22","hashOfConfig":"18"},{"size":5508,"mtime":1608103591500,"results":"23","hashOfConfig":"18"},{"size":61,"mtime":1608093127762,"results":"24","hashOfConfig":"18"},{"size":186,"mtime":1608090074173,"results":"25","hashOfConfig":"18"},{"size":2306,"mtime":1608098567024,"results":"26","hashOfConfig":"18"},{"size":311,"mtime":1608093052773,"results":"27","hashOfConfig":"18"},{"size":441,"mtime":1608089955466,"results":"28","hashOfConfig":"18"},{"size":200,"mtime":1608093011546,"results":"29","hashOfConfig":"18"},{"size":113,"mtime":1608093098379,"results":"30","hashOfConfig":"18"},{"size":10078,"mtime":1608106441741,"results":"31","hashOfConfig":"18"},{"size":6187,"mtime":1608106448946,"results":"32","hashOfConfig":"18"},{"size":1001,"mtime":1608099139246,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"ejj8of",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"36"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"F:\\Purwadhika\\JCWM15\\FRONTEND\\Ujian\\ujian-frontend-1504\\src\\index.js",[],["73","74"],"F:\\Purwadhika\\JCWM15\\FRONTEND\\Ujian\\ujian-frontend-1504\\src\\App.js",[],"F:\\Purwadhika\\JCWM15\\FRONTEND\\Ujian\\ujian-frontend-1504\\src\\components\\Navigation.js",["75"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n    Navbar,\r\n    Nav,\r\n    Image,\r\n    Dropdown\r\n} from 'react-bootstrap'\r\n\r\n// import action logout\r\nimport { logout } from '../actions'\r\n\r\n// import logo\r\n\r\n\r\nclass Navigation extends React.Component {\r\n    handleLogout = () => {\r\n        localStorage.removeItem('id')\r\n        this.props.logout()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Navbar expand=\"lg\" fixed='top' style={{ height: '70px', backgroundColor: 'rgba(43, 104, 213, .7)' }}>\r\n                <Navbar.Brand>\r\n                    <strong style={{ color: 'white', fontSize: '30px' }}>Shoes Shop</strong>\r\n                </Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link as={Link} to='/' style={{ color: 'white' }}>Home</Nav.Link>\r\n                    </Nav>\r\n                    <Link to='/cart'>\r\n                        <i className=\"fas fa-shopping-cart\" style={{ fontSize: '22px', color: 'white' }}></i>\r\n                    </Link>\r\n                    <Dropdown style={{ margin: '0 40px' }}>\r\n                        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                            {this.props.username || \"username\"}\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            {this.props.username\r\n                                ?\r\n                                <>\r\n                                    <Dropdown.Item onClick={this.handleLogout}>Logout</Dropdown.Item>\r\n                                    <Dropdown.Item as={Link} to={this.props.role === 'user' ? '/history' : '/history_admin'} >History</Dropdown.Item>\r\n                                </>\r\n                                :\r\n                                <>\r\n                                    <Dropdown.Item as={Link} to='/login' >Login</Dropdown.Item>\r\n                                </>\r\n                            }\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        username: state.user.username,\r\n        role: state.user.role\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { logout })(Navigation)","F:\\Purwadhika\\JCWM15\\FRONTEND\\Ujian\\ujian-frontend-1504\\src\\assets\\index.js",[],["76","77"],"F:\\Purwadhika\\JCWM15\\FRONTEND\\Ujian\\ujian-frontend-1504\\src\\pages\\home.js",[],"F:\\Purwadhika\\JCWM15\\FRONTEND\\Ujian\\ujian-frontend-1504\\src\\pages\\login.js",["78"],"import React from 'react'\r\nimport Axios from 'axios'\r\nimport {\r\n    InputGroup,\r\n    FormControl,\r\n    Button,\r\n    Modal\r\n} from 'react-bootstrap'\r\n\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { login } from '../actions'\r\n\r\nclass LoginPage extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            visible: false,\r\n            loginError: [false, \"\"]\r\n        }\r\n    }\r\n\r\n    handleLogin = () => {\r\n        let email = this.refs.email.value;\r\n        let password = this.refs.password.value;\r\n\r\n        console.log(email, password);\r\n        if (!email || !password) return this.setState({ loginError: [true, \"Please Input All Form\"] })\r\n\r\n\r\n        Axios.get(`http://localhost:2000/users?email=${email}&password=${password}`)\r\n            .then((res) => {\r\n                console.log(res.data);\r\n\r\n                if (res.data.length === 0) return this.setState({ loginError: [true, \"Invalid Email or Password\"] })\r\n                localStorage.id = res.data[0].id;\r\n                this.props.login(res.data[0])\r\n                this.setState({ loginError: [false, \"\"] });\r\n            })\r\n            .catch((err) => console.log(err));\r\n    };\r\n\r\n    render() {\r\n        // console.log(this)\r\n        if (this.props.username) return <Redirect to=\"/\" />\r\n        // object destructuring untuk local state\r\n        const { loginError, visible } = this.state\r\n\r\n        return (\r\n            <div style={styles.container}>\r\n                <div style={styles.center}>\r\n                    <div style={{ marginBottom: '10px' }}>\r\n                        <h1>Login</h1>\r\n                    </div>\r\n                    <div style={{ width: '100%', height: 'auto', marginButtom: '5px', textAlign: 'center' }}>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text id=\"basic-addon1\" style={{ width: '45px', display: 'flex', justifyContent: 'center' }}>\r\n                                    <i className=\"fas fa-user\" ></i>\r\n                                </InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl\r\n                                placeholder=\"Email\"\r\n                                aria-label=\"Email\"\r\n                                aria-describedby=\"basic-addon1\"\r\n                                ref=\"email\"\r\n                            />\r\n                        </InputGroup>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Prepend style={{ cursor: 'pointer' }}\r\n                                onClick={() => this.setState({ visible: !visible })}>\r\n                                <InputGroup.Text id=\"basic-addon1\" style={{ width: '45px', display: 'flex', justifyContent: 'center' }}>\r\n                                    <i className={visible ? \"fas fa-eye\" : \"fas fa-eye-slash\"}></i>\r\n                                </InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl\r\n                                placeholder=\"Password\"\r\n                                aria-label=\"Password\"\r\n                                aria-describedby=\"basic-addon1\"\r\n                                ref=\"password\"\r\n                                type={visible ? \"text\" : \"password\"}\r\n                            />\r\n                        </InputGroup>\r\n                        <Button onClick={this.handleLogin} style={{ margin: \"10px\" }}>\r\n                            Login\r\n                            <i className=\"fas fa-sign-in-alt\" style={{ marginLeft: \"8px\" }} />\r\n                        </Button>\r\n                        </div>\r\n                </div>\r\n                <Modal show={loginError[0]} onHide={() => this.setState({ loginError: [false, \"\"] })}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Error</Modal.Title>\r\n                    </Modal.Header>\r\n\r\n                    <Modal.Body>\r\n                        <p>{loginError[1]}</p>\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <Button variant=\"primary\" onClick={() => this.setState({ loginError: [false, \"\"] })}>\r\n                            Okay\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    container: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        height: '100vh',\r\n        background: \"url(https://images.unsplash.com/photo-1560072810-1cffb09faf0f?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1500&q=80) no-repeat center\",\r\n        backgroundSize: 'cover'\r\n    },\r\n    center: {\r\n        marginTop: '100px',\r\n        padding: '10px 30px',\r\n        width: '350px',\r\n        height: '50vh',\r\n        backgroundColor: 'rgba(255, 255, 255, .7)',\r\n        display: 'flex',\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        border: \"1px solid gray\",\r\n        borderRadius: \"30px\"\r\n    },\r\n    item: {\r\n        width: '100%',\r\n        height: 'auto',\r\n        marginButtom: '5px'\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        username: state.user.username\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { login })(LoginPage)","F:\\Purwadhika\\JCWM15\\FRONTEND\\Ujian\\ujian-frontend-1504\\src\\actions\\index.js",[],"F:\\Purwadhika\\JCWM15\\FRONTEND\\Ujian\\ujian-frontend-1504\\src\\actions\\userAction.js",[],"F:\\Purwadhika\\JCWM15\\FRONTEND\\Ujian\\ujian-frontend-1504\\src\\components\\products.js",[],"F:\\Purwadhika\\JCWM15\\FRONTEND\\Ujian\\ujian-frontend-1504\\src\\reducer\\index.js",["79"],"import { useHistory } from 'react-router-dom'\r\nimport { combineReducers } from 'redux'\r\n\r\nimport { userReducer } from './userReducer'\r\nimport {historyReducer} from './historyReducer'\r\n\r\nconst allReducer = combineReducers({\r\n    user: userReducer,\r\n    history: historyReducer,\r\n\r\n})\r\n\r\nexport default allReducer","F:\\Purwadhika\\JCWM15\\FRONTEND\\Ujian\\ujian-frontend-1504\\src\\reducer\\userReducer.js",[],"F:\\Purwadhika\\JCWM15\\FRONTEND\\Ujian\\ujian-frontend-1504\\src\\reducer\\historyReducer.js",[],"F:\\Purwadhika\\JCWM15\\FRONTEND\\Ujian\\ujian-frontend-1504\\src\\actions\\historyAction.js",[],"F:\\Purwadhika\\JCWM15\\FRONTEND\\Ujian\\ujian-frontend-1504\\src\\pages\\cartPage.js",["80","81"],"import React from 'react'\r\nimport Axios from 'axios'\r\n\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nimport { login } from '../actions'\r\n\r\nimport {\r\n    Table,\r\n    Button,\r\n    Image,\r\n    Form,\r\n    Modal\r\n} from 'react-bootstrap'\r\n\r\nclass CartPage extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            selectedIndex: null,\r\n            newQty: 0,\r\n            reqPayment: false,\r\n            reqPass: false,\r\n            errPass: false,\r\n            errPayment: false,\r\n            cartEmpty: false,\r\n            toHistory: false\r\n        }\r\n    }\r\n\r\n    handleDelete = (index) => {\r\n        // console.log(index)\r\n        let tempCart = this.props.cart\r\n\r\n        // syntax splice untuk menghapus\r\n        tempCart.splice(index, 1)\r\n        console.log(tempCart)\r\n\r\n        Axios.patch(`http://localhost:2000/users/${localStorage.id}`, { cart: tempCart })\r\n            .then((res) => {\r\n                console.log(res.data)\r\n\r\n                Axios.get(`http://localhost:2000/users/${localStorage.id}`)\r\n                    .then((res) => this.props.login(res.data))\r\n                    .catch((err) => console.log(err))\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }\r\n\r\n    handleMinus = () => {\r\n        if (this.state.newQty <= 0) return\r\n\r\n        this.setState({ newQty: this.state.newQty - 1 })\r\n    }\r\n\r\n    changeQty = (e) => {\r\n        this.setState({ newQty: e.target.value })\r\n    }\r\n\r\n    handleDone = (index) => {\r\n        // mengganti data pesanan suatu produk berdasarkan index\r\n        // tempProduct adalah tempat penyimpanan sementara data product yang ingin diedit\r\n        let tempProduct = this.props.cart[index]\r\n\r\n        // mengganti data cart untuk product yang ingin diganti\r\n        tempProduct.qty = parseInt(this.state.newQty)\r\n        tempProduct.total = this.state.newQty * this.props.cart[index].price\r\n        console.log(tempProduct)\r\n\r\n        // memasukan object pesanan product yang baru, ke dalam array cart yang lama\r\n        // tempCart adalah tempat penampungan sementara data cart user yang lama\r\n        let tempCart = this.props.cart\r\n\r\n        // syntax splice untuk mereplace\r\n        tempCart.splice(index, 1, tempProduct)\r\n        console.log(tempCart)\r\n\r\n        // mengirim perubahan ke database json\r\n        Axios.patch(`http://localhost:2000/users/${localStorage.id}`, { cart: tempCart })\r\n            .then((res) => {\r\n                console.log(res.data)\r\n\r\n                // update data di redux\r\n                Axios.get(`http://localhost:2000/users/${localStorage.id}`)\r\n                    .then((res) => {\r\n                        this.props.login(res.data)\r\n                        this.setState({ selectedIndex: null })\r\n                    })\r\n                    .catch((err) => console.log(err))\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }\r\n\r\n    totalPrice = () => {\r\n        let counter = 0\r\n        this.props.cart.map(item => counter += item.total)\r\n        // console.log(counter)\r\n        return counter\r\n    }\r\n\r\n    checkOut = () => {\r\n        if (this.props.cart.length === 0) return this.setState({ cartEmpty: true })\r\n\r\n        this.setState({ reqPass: true })\r\n    }\r\n\r\n    confPayment = () => {\r\n        let nominal = this.refs.payment.value\r\n        // console.log(nominal)\r\n        let total = this.totalPrice()\r\n        // console.log(total)\r\n\r\n        if (nominal < total) return this.setState({ errPayment: true })\r\n\r\n        // siapkan data\r\n        let history = {\r\n            username: this.props.username,\r\n            date: new Date().toLocaleString(),\r\n            total: total,\r\n            product: this.props.cart\r\n        }\r\n        console.log(history)\r\n\r\n        // update data history user\r\n        Axios.post('http://localhost:2000/history', history)\r\n            .then((res) => {\r\n                console.log(res.data)\r\n\r\n                // kosongkan cart dan update database\r\n                Axios.patch(`http://localhost:2000/users/${localStorage.id}`, { cart: [] })\r\n                    .then((res) => {\r\n                        console.log(res.data)\r\n\r\n                        // update redux\r\n                        Axios.get(`http://localhost:2000/users/${localStorage.id}`)\r\n                            .then((res) => {\r\n                                console.log(res.data)\r\n                                this.props.login(res.data)\r\n                                this.setState({ reqPayment: false, toHistory: true })\r\n                            })\r\n                            .catch((err) => console.log(err))\r\n                    })\r\n                    .catch((err) => console.log(err))\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }\r\n\r\n    confPass = () => {\r\n        let pass = this.refs.pass.value\r\n        // console.log(pass)\r\n        if (pass !== this.props.pass) return this.setState({ errPass: true })\r\n\r\n        this.setState({ reqPayment: true, reqPass: false })\r\n    }\r\n\r\n    renderTHead = () => {\r\n        return (\r\n            <thead style={{ textAlign: \"center\" }}>\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th>Name</th>\r\n                    <th>Image</th>\r\n                    <th>Size</th>\r\n                    <th>Price</th>\r\n                    <th>Quantity</th>\r\n                    <th>Total</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n        )\r\n    }\r\n\r\n   \r\n\r\n    render() {\r\n        const { reqPayment, reqPass, errPass, errPayment, cartEmpty, toHistory } = this.state\r\n\r\n        // redirect ke login kalau user belum login\r\n        if (!this.props.id) return <Redirect to='/login' />\r\n\r\n        // redirect ke history kalau user berhasil check out\r\n        if (toHistory) return <Redirect to='/history' />\r\n\r\n        return (\r\n            <div style={{ marginTop: '70px', padding: '0 15px' }}>\r\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <h1>Ini Cart Page</h1>\r\n                    <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                        <Button  variant=\"success\">Checkout</Button>\r\n                    </div>\r\n                </div>\r\n                <Table striped bordered hover variant=\"dark\">\r\n                    {this.renderTHead()}\r\n                 \r\n                </Table>\r\n                <h1 style={{ textAlign: 'right' }}>Total: IDR {this.totalPrice().toLocaleString()}</h1>\r\n                <Modal show={reqPass} onHide={() => this.setState({ reqPass: false })}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Confirmation</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form.Control ref=\"pass\" placeholder=\"Tolong Masukan Password Untuk Melanjutkan Pembayaran:\" />\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={() => this.setState({ reqPass: false })}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={this.confPass} >\r\n                            Confirm\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                <Modal show={errPass} onHide={() => this.setState({ errPass: false })}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Error!</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>Wrong Password</Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={() => this.setState({ errPass: false })}>\r\n                            Close\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                <Modal show={reqPayment} onHide={() => this.setState({ reqPayment: false })}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Payment</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form.Control ref=\"payment\" type=\"number\" placeholder=\"Tolong Masukan Jumlah Uang Untuk Pembayaran:\" />\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={() => this.setState({ reqPayment: false })}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={this.confPayment} >\r\n                            Confirm\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                <Modal show={errPayment} onHide={() => this.setState({ errPayment: false })}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Error!</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>Jumlah Uang Kurang Dari Total Cart</Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={() => this.setState({ errPayment: false })}>\r\n                            Close\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                <Modal show={cartEmpty} onHide={() => this.setState({ cartEmpty: false })}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Error!</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>Make Sure Your Cart Is Not Empty!</Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={() => this.setState({ cartEmpty: false })}>\r\n                            Close\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default CartPage","F:\\Purwadhika\\JCWM15\\FRONTEND\\Ujian\\ujian-frontend-1504\\src\\pages\\detProduct.js",["82"],"import React from 'react'\r\nimport Axios from 'axios'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nimport {\r\n    Image,\r\n    Button,\r\n    Modal\r\n} from 'react-bootstrap'\r\n\r\nclass DetailProduct extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            data: {},\r\n            image: '',\r\n            selectedSize: null,\r\n            size: 0,\r\n            stock: '',\r\n            total: 0,\r\n            toLogin: false,\r\n            cartErr: false,\r\n            toCart: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        Axios.get(`http://localhost:2000/products${this.props.location.search}`)\r\n            .then((res) => {\r\n                console.log(res.data[0].img)\r\n                this.setState({ data: res.data, image: res.data.img })\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }\r\n\r\n    handleAddToCart = () => {\r\n        const { total, size, data } = this.state\r\n        if (!this.props.id) return this.setState({ toLogin: true })\r\n\r\n        // check user input\r\n        if (total === 0 || size === 0) return this.setState({ cartErr: true })\r\n\r\n        let cartData = {\r\n            name: data.name,\r\n            image: data.img,\r\n            category: data.category,\r\n            brand: data.brand,\r\n            colour: data.colour,\r\n            price: data.price,\r\n            size: size,\r\n            qty: total,\r\n            total: total * data.price\r\n        }\r\n        // console.log(cartData)\r\n        let tempCart = this.props.cart\r\n        tempCart.push(cartData)\r\n        // console.log(tempCart)\r\n\r\n        Axios.patch(`http://localhost:2000/users/${this.props.id}`, { cart: tempCart })\r\n            .then((res) => {\r\n                console.log(res.data)\r\n                this.setState({ toCart: true })\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }\r\n    render() {\r\n        const { data, image, selectedSize, total, stock, toLogin, cartErr, toCart } = this.state\r\n\r\n        if (toLogin) return <Redirect to='/login' />\r\n\r\n        if (toCart) return <Redirect to='/cart' />\r\n\r\n        return (\r\n            <div>\r\n                <Modal.Dialog>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Product Detail</Modal.Title>\r\n                    </Modal.Header>\r\n\r\n                    <Modal.Body>\r\n                        <div style={{ display: 'flex', height: '65vh' }}>\r\n                            <div style={{ backgroundColor: 'yellow', width: '200px' }}>\r\n                                <Image src={image} rounded style={{ height: '90%', width: '90%' }} />\r\n                            </div>\r\n                            <div style={{ backgroundColor: 'green', width: '400px' }}>\r\n                                <h2>{data.name}</h2>\r\n                                <h6>Description: {data.description}</h6>\r\n                                <h6>Price: IDR {data.price ? data.price.toLocaleString() : 0}</h6>\r\n                                <div style={{ display: 'flex' }}>\r\n                                <div style={{ marginRight: '50px' }}>\r\n                                    <h5>Size: </h5>\r\n                                    <div>\r\n                                        {(data.stock || []).map((item, index) => {\r\n                                            return (\r\n                                                <Button\r\n                                                    key={index}\r\n                                                    onClick={() => this.setState({ size: item.code, selectedSize: index, stock: item.total })}\r\n                                                    style={{\r\n                                                        backgroundColor: selectedSize === index ? '#130f40' : '#ffffff',\r\n                                                        color: selectedSize === index ? 'white' : 'black'\r\n                                                    }}>\r\n                                                    {item.code}\r\n                                                </Button>\r\n                                            )\r\n                                        })}\r\n                                    </div>\r\n                                    <h5>*Stock = {stock}</h5>\r\n                                </div>\r\n                                <div style={{ width: '20%' }}>\r\n                                    <h5>Quantity: </h5>\r\n                                    <div style={{ display: 'flex', backgroundColor: 'white', justifyContent: 'space-between', borderRadius: '5px' }}>\r\n                                        <Button\r\n                                            disabled={total <= 0 ? true : false}\r\n                                            variant=\"danger\"\r\n                                            onClick={() => this.setState({ total: total - 1 })}>\r\n                                            -\r\n                                        </Button>\r\n                                        <h1>{total}</h1>\r\n                                        <Button\r\n                                            disabled={total >= stock ? true : false}\r\n                                            variant=\"primary\"\r\n                                            onClick={() => this.setState({ total: total + 1 })}>\r\n                                            +\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\">Close</Button>\r\n                        <Button variant=\"primary\">Save changes</Button>\r\n                    </Modal.Footer>\r\n                </Modal.Dialog>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        email: state.user.email,\r\n        cart: state.user.cart\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(DetailProduct)","F:\\Purwadhika\\JCWM15\\FRONTEND\\Ujian\\ujian-frontend-1504\\src\\pages\\error.js",[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":7,"column":5,"nodeType":"89","messageId":"90","endLine":7,"endColumn":10},{"ruleId":"83","replacedBy":"91"},{"ruleId":"85","replacedBy":"92"},{"ruleId":"87","severity":1,"message":"93","line":10,"column":10,"nodeType":"89","messageId":"90","endLine":10,"endColumn":14},{"ruleId":"87","severity":1,"message":"94","line":1,"column":10,"nodeType":"89","messageId":"90","endLine":1,"endColumn":20},{"ruleId":"87","severity":1,"message":"95","line":6,"column":10,"nodeType":"89","messageId":"90","endLine":6,"endColumn":15},{"ruleId":"87","severity":1,"message":"88","line":11,"column":5,"nodeType":"89","messageId":"90","endLine":11,"endColumn":10},{"ruleId":"87","severity":1,"message":"96","line":68,"column":67,"nodeType":"89","messageId":"90","endLine":68,"endColumn":74},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"no-unused-vars","'Image' is defined but never used.","Identifier","unusedVar",["97"],["98"],"'Link' is defined but never used.","'useHistory' is defined but never used.","'login' is defined but never used.","'cartErr' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]